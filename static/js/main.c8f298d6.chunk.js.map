{"version":3,"sources":["Components/SearchField.jsx","Components/GifCard.jsx","App.js","logo.svg","reportWebVitals.js","index.js"],"names":["SearchField","value","onChange","onSearch","onTrending","onRandom","className","placeholder","onClick","GifCard","props","handleInput","event","setState","userInput","target","handleSearch","state","axios","get","then","response","data","gifs","randomDisplay","catch","error","console","log","handleTrendingSearch","trendingGifs","handleRandomSearch","randomGifs","randomGif","this","showRandom","map","src","images","downsized_medium","url","alt","title","Component","App","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8f298d6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst SearchField = ({value, onChange, onSearch, onTrending, onRandom}) => {\n    return(\n      <div className = \"container\">\n        <div className = \"input-bar\">\n            <input placeholder=\"Try dancing\" className = \"user-input\" value={value} onChange={onChange} />\n            <button className = \"btnA\" onClick={onSearch}>Search</button>\n        </div>\n        <div>\n            <button className = \"btnB\" onClick={onTrending}>Trending</button>\n            <button className = \"btnC\" onClick={onRandom}>Random</button>\n        </div>\n      </div>\n    );\n  };\n  export default SearchField;","import React, { Component } from \"react\";\nimport SearchField from \"./SearchField\";\nimport axios from 'axios';\n\nclass GifCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            gifs: [],\n            userInput: \"\",\n            randomGif: [],\n            trendingGifs: [],\n            randomDisplay: null,\n        };\n    }\n\n    handleInput = (event) => {\n        this.setState({userInput: event.target.value});\n    }\n\n    handleSearch = (event) => {\n        const userInput = this.state.userInput;\n        axios.get(`https://api.giphy.com/v1/gifs/search?q=${userInput}&api_key=iUiZNgO1UCUqHilW8CJbtxuJcYxzA3T5`)\n        .then((response) => {\n            let data = response.data.data;\n            this.setState({gifs: data});\n            this.setState({randomDisplay: false});\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    handleTrendingSearch = () => {\n        axios.get(`https://api.giphy.com/v1/gifs/trending?api_key=iUiZNgO1UCUqHilW8CJbtxuJcYxzA3T5`)\n        .then(response => {\n            let data = response.data.data;\n            this.setState({trendingGifs: data});\n            this.setState({randomDisplay: false});\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    handleRandomSearch = () => {\n        axios.get(`https://api.giphy.com/v1/gifs/random?&api_key=iUiZNgO1UCUqHilW8CJbtxuJcYxzA3T5`)\n        .then(response => {\n            let data = response.data.data;\n            this.setState({randomGifs: data});\n            this.setState({randomDisplay: true});\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        let showRandom = this.state.showRandom;\n        return (\n            <div className=\"searchField\">\n                <SearchField\n                    value = {this.state.userInput}\n                    onChange = {this.handleInput}\n                    onSearch = {this.handleSearch}\n                    onTrending = {this.handleTrendingSearch}\n                    onRandom = {this.handleRandomSearch}\n                />\n                <div className=\"display\"> \n                    {this.state.gifs.map(data => {\n                        if (this.state.randomDisplay !== true) {\n                            return (\n                                <div className=\"gifs-display\">\n                                    <div><img src={data.images.downsized_medium.url} className=\"gif-display\" alt=\"gifs\"></img></div>\n                                <div className=\"display-style\">\n                                    <h1 className=\"text\">{data.title}</h1>\n                                </div>\n                                </div>\n                            )}\n                            else {\n                                <div><img src={this.state.randomGif}/></div>\n                            }\n                        })}\n                            \n                </div>\n            </div>\n        );\n    }\n  }\n  \n  export default GifCard;\n\n\n","import React, { Component } from \"react\";\nimport GifCard from \"./Components/GifCard\";\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render(){\n    return (\n      <div>\n        <div className=\"icon\">\n            <a href=\"/\">\n            <img src=\"giphyLogo.png\" alt=\"logo\" className=\"logo\"/>\n            </a>\n        </div>\n        <div className = \"title\"> GIPHY SEARCH</div>\n          <div className=\"gifs\">\n            <div>\n              <GifCard />\n            </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}