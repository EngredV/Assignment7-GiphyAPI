[{"/Users/emi/Desktop/TTP/giphy-api/src/index.js":"1","/Users/emi/Desktop/TTP/giphy-api/src/App.js":"2","/Users/emi/Desktop/TTP/giphy-api/src/reportWebVitals.js":"3","/Users/emi/Desktop/TTP/giphy-api/src/Components/GifCard.jsx":"4","/Users/emi/Desktop/TTP/giphy-api/src/Components/SearchField.jsx":"5"},{"size":500,"mtime":1610912174666,"results":"6","hashOfConfig":"7"},{"size":575,"mtime":1610967128265,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1610912174668,"results":"9","hashOfConfig":"7"},{"size":3074,"mtime":1610969249264,"results":"10","hashOfConfig":"7"},{"size":637,"mtime":1610965893224,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1a24tyd",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/Users/emi/Desktop/TTP/giphy-api/src/index.js",[],["26","27"],"/Users/emi/Desktop/TTP/giphy-api/src/App.js",["28"],"import React, { Component } from \"react\";\nimport GifCard from \"./Components/GifCard\";\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render(){\n    return (\n      <div>\n        <div className=\"icon\">\n            <a href=\"/\">\n            <img src=\"giphyLogo.png\" alt=\"logo\" className=\"logo\"/>\n            </a>\n        </div>\n        <div className = \"title\"> GIPHY SEARCH</div>\n          <div className=\"gifs\">\n            <div>\n              <GifCard />\n            </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","/Users/emi/Desktop/TTP/giphy-api/src/reportWebVitals.js",[],"/Users/emi/Desktop/TTP/giphy-api/src/Components/GifCard.jsx",["29","30","31"],"import React, { Component } from \"react\";\nimport SearchField from \"./SearchField\";\nimport axios from 'axios';\n\nclass GifCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            gifs: [],\n            userInput: \"\",\n            randomGif: [],\n            trendingGifs: [],\n            randomDisplay: null,\n        };\n    }\n\n    handleInput = (event) => {\n        this.setState({userInput: event.target.value});\n    }\n\n    handleSearch = (event) => {\n        const userInput = this.state.userInput;\n        axios.get(`https://api.giphy.com/v1/gifs/search?q=${userInput}&api_key=iUiZNgO1UCUqHilW8CJbtxuJcYxzA3T5`)\n        .then((response) => {\n            let data = response.data.data;\n            this.setState({gifs: data});\n            this.setState({randomDisplay: false});\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    handleTrendingSearch = () => {\n        axios.get(`https://api.giphy.com/v1/gifs/trending?api_key=iUiZNgO1UCUqHilW8CJbtxuJcYxzA3T5`)\n        .then(response => {\n            let data = response.data.data;\n            this.setState({trendingGifs: data});\n            this.setState({randomDisplay: false});\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    handleRandomSearch = () => {\n        axios.get(`https://api.giphy.com/v1/gifs/random?&api_key=iUiZNgO1UCUqHilW8CJbtxuJcYxzA3T5`)\n        .then(response => {\n            let data = response.data.data;\n            this.setState({randomGifs: data});\n            this.setState({randomDisplay: true});\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        let showRandom = this.state.showRandom;\n        return (\n            <div className=\"searchField\">\n                <SearchField\n                    value = {this.state.userInput}\n                    onChange = {this.handleInput}\n                    onSearch = {this.handleSearch}\n                    onTrending = {this.handleTrendingSearch}\n                    onRandom = {this.handleRandomSearch}\n                />\n                <div className=\"display\"> \n                    {this.state.gifs.map(data => {\n                        if (this.state.randomDisplay !== true) {\n                            return (\n                                <div className=\"gifs-display\">\n                                    <div><img src={data.images.downsized_medium.url} className=\"gif-display\" alt=\"gifs\"></img></div>\n                                <div className=\"display-style\">\n                                    <h1 className=\"text\">{data.title}</h1>\n                                </div>\n                                </div>\n                            )}\n                            else {\n                                <div><img src={this.state.randomGif}/></div>\n                            }\n                        })}\n                            \n                </div>\n            </div>\n        );\n    }\n  }\n  \n  export default GifCard;\n\n\n","/Users/emi/Desktop/TTP/giphy-api/src/Components/SearchField.jsx",["32"],"import React, { Component } from \"react\";\n\nconst SearchField = ({value, onChange, onSearch, onTrending, onRandom}) => {\n    return(\n      <div className = \"container\">\n        <div className = \"input-bar\">\n            <input placeholder=\"Try dancing\" className = \"user-input\" value={value} onChange={onChange} />\n            <button className = \"btnA\" onClick={onSearch}>Search</button>\n        </div>\n        <div>\n            <button className = \"btnB\" onClick={onTrending}>Trending</button>\n            <button className = \"btnC\" onClick={onRandom}>Random</button>\n        </div>\n      </div>\n    );\n  };\n  export default SearchField;",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":3,"column":8,"nodeType":"39","messageId":"40","endLine":3,"endColumn":12},{"ruleId":"37","severity":1,"message":"41","line":59,"column":13,"nodeType":"39","messageId":"40","endLine":59,"endColumn":23},{"ruleId":"42","severity":1,"message":"43","line":70,"column":47,"nodeType":"44","messageId":"45","endLine":70,"endColumn":49},{"ruleId":"46","severity":1,"message":"47","line":81,"column":38,"nodeType":"48","endLine":81,"endColumn":71},{"ruleId":"37","severity":1,"message":"49","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":26},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'showRandom' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]